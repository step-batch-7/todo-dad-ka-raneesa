Requirements:
 --DONE-- 1. Create one or more to-do list with a title
 --DONE-- 2. View all the to-do lists
 --DONE-- 3. Add an item to a to-do list
 --DONE-- 4. Delete an item from to-do list
 --DONE-- 5. Mark an item as done and undone
 --DONE-- 6. Delete a todo list

Next Requirements:
 --DONE-- 1. Edit title: Ability to edit their existing todo list title.
 --DONE-- 2. Edit tasks: Ability to edit their existing tasks.
 --DONE-- 4. Search by tasks: Search the todo item by its matched words.
 --DONE-- 3. Search by title:  Search the list by its title words.
  5. User todo's: A user can log in and log out off their account and work on their own todos.
  6. Home Page: If not logged in it is a login page else it is the user's todo page/dashboard.


Data Structure:
    * todo lists --> array of objects (array of lists)
    * tasks --> contains two parts
                  * title
                  * lists
    * lists --> array of objects (array of tasks)
                  [{work:(content),isDone(true/false),id:(number)}]

todo lists : 
      [
        {
           id:number,
           title: some title,
           tasks: [
                    {
                      id:number,
                      work: list1,
                      isDone: false
                    },
                    {
                      id:number,
                      work: list2,
                      isDone: false
                    }
                  ]
        }
      ]

tasks:
  --DONE-- * Install mocha nyc for testing.
  --DONE-- * Add .eslintrc.
  --DONE-- * setUp environment
    [  server.js
      --> lib folder
        * app.js
        * handlers.js
        * mimeTypes.js
      --> pubic folder
        * css folder
          * index.css
        * index.html
      --> test folder
        * testHandlers.js ]

  --DONE-- * Write an html page of to load page
  --DONE-- * Add server
  --DONE-- * Show entered lists along with title
  --DONE-- * Create an subTask Adder to todo
  --DONE-- * Create text boxes, so that user can enter title and lists
  --DONE-- * Delete a todo list
  --DONE-- * Delete an item from todo list
  --DONE-- * write and read data from todoLists.json
  --DONE-- * Mark an item as done and undone
